{"ast":null,"code":"var _jsxFileName = \"K:\\\\Epic Wallpaper\\\\Epic-Wallpaper\\\\website\\\\src\\\\components\\\\WallpaperGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/WallpaperGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wallpapers = [{\n  id: 1,\n  mobileUrl: '/assets/wallpaper-mobile-1.jpg',\n  laptopUrl: '/assets/wallpaper-laptop-1.jpg',\n  title: 'Wallpaper 1'\n}, {\n  id: 2,\n  mobileUrl: '/assets/wallpaper-mobile-2.jpg',\n  laptopUrl: '/Asserts/wallpaperflare.com_wallpaper (1).jpg',\n  title: 'Wallpaper 2'\n}, {\n  id: 3,\n  mobileUrl: '/assets/wallpaper-mobile-2.jpg',\n  laptopUrl: '/Asserts/wallpaperflare.com_wallpaper (2).jpg',\n  title: 'Wallpaper 2'\n}, {\n  id: 4,\n  mobileUrl: '/assets/wallpaper-mobile-2.jpg',\n  laptopUrl: '/Asserts/wallpaperflare.com_wallpaper (3).jpg',\n  title: 'Wallpaper 2'\n}, {\n  id: 5,\n  mobileUrl: '/assets/wallpaper-mobile-2.jpg',\n  laptopUrl: '/Asserts/wallpaperflare.com_wallpaper (4).jpg',\n  title: 'Wallpaper 2'\n}\n// Add more wallpapers here\n];\nconst WallpaperGrid = () => {\n  _s();\n  const [device, setDevice] = useState('laptop');\n  const handleDeviceChange = e => {\n    setDevice(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Device Size: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleDeviceChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"laptop\",\n          children: \"Laptop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mobile\",\n          children: \"Mobile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallpaper-grid\",\n      children: wallpapers.map(wallpaper => {\n        const imgUrl = device === 'laptop' ? wallpaper.laptopUrl : wallpaper.mobileUrl;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgUrl,\n            alt: wallpaper.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: wallpaper.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, wallpaper.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(WallpaperGrid, \"QBATfZPSwp++ITEi83DRgKLhPkU=\");\n_c = WallpaperGrid;\nexport default WallpaperGrid;\nvar _c;\n$RefreshReg$(_c, \"WallpaperGrid\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","wallpapers","id","mobileUrl","laptopUrl","title","WallpaperGrid","_s","device","setDevice","handleDeviceChange","e","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","wallpaper","imgUrl","src","alt","_c","$RefreshReg$"],"sources":["K:/Epic Wallpaper/Epic-Wallpaper/website/src/components/WallpaperGrid.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/WallpaperGrid.css';\n\nconst wallpapers = [\n  {\n    id: 1,\n    mobileUrl: '/assets/wallpaper-mobile-1.jpg',\n    laptopUrl: '/assets/wallpaper-laptop-1.jpg',\n    title: 'Wallpaper 1',\n  },\n  {\n    id: 2,\n    mobileUrl: '/assets/wallpaper-mobile-2.jpg',\n    laptopUrl: '/Asserts/wallpaperflare.com_wallpaper (1).jpg',\n    title: 'Wallpaper 2',\n  },\n  {\n    id: 3,\n    mobileUrl: '/assets/wallpaper-mobile-2.jpg',\n    laptopUrl: '/Asserts/wallpaperflare.com_wallpaper (2).jpg',\n    title: 'Wallpaper 2',\n  },\n  {\n    id: 4,\n    mobileUrl: '/assets/wallpaper-mobile-2.jpg',\n    laptopUrl: '/Asserts/wallpaperflare.com_wallpaper (3).jpg',\n    title: 'Wallpaper 2',\n  },\n  {\n    id: 5,\n    mobileUrl: '/assets/wallpaper-mobile-2.jpg',\n    laptopUrl: '/Asserts/wallpaperflare.com_wallpaper (4).jpg',\n    title: 'Wallpaper 2',\n  },\n  // Add more wallpapers here\n];\n\nconst WallpaperGrid = () => {\n  const [device, setDevice] = useState('laptop');\n\n  const handleDeviceChange = (e) => {\n    setDevice(e.target.value);\n  };\n\n  return (\n    <div>\n      <div className=\"device-selector\">\n        <label>Select Device Size: </label>\n        <select onChange={handleDeviceChange}>\n          <option value=\"laptop\">Laptop</option>\n          <option value=\"mobile\">Mobile</option>\n        </select>\n      </div>\n\n      <div className=\"wallpaper-grid\">\n        {wallpapers.map((wallpaper) => {\n          const imgUrl = device === 'laptop' ? wallpaper.laptopUrl : wallpaper.mobileUrl;\n          return (\n            <div key={wallpaper.id}>\n              <img src={imgUrl} alt={wallpaper.title} />\n              <h3>{wallpaper.title}</h3>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default WallpaperGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}